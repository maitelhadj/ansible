---
- name: "Install Docker"
  hosts: {{inventory_hostname}}
  vars:
    inventory_hostname: client1
  tasks:
    - name: "Install dependencies"
      apt:
        name: {{item}}
        uptade_cache: yes
      loop:
        - ca-certificates
        - curl
        - gnupg
        - lsb-release
      become: yes
    - name: "Add Dockerâ€™s official GPG key"
      shell: "curl -fsSL https://download.docker.com/linux/debian/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg"
    - name: "Set up the stable repository"
      shell: echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
    - name: "Install docker-ce"
      apt:
        name: docker-ce
        update_cache: yes
      loop:
        - docker-ce
        - docker-ce-cli
        - containerd.io
      become: yes
    - name: "Start service Docker if not"
      service:
        name: docker
        state: started
      become: yes
  tags: install-docker
  
- name: "Install git and wget"
  hosts: {{inventory_hostname}}
  vars:
    inventory_hostname: client1
  gather_facts: yes
  tasks:
    - name: "Install dependencies"
      apt:
        name: {{item}}
        uptade_cache: yes
      loop:
        - git
        - wget
      when: ansible_distribution == "Debian"
  tags: install-git-wget
  
- name: Create site
  hosts: {{inventory_hostname}}
  vars:
    inventory_hostname: client1
  template:
    src: "templates/index.html.j2"
    dest: "/index.html"
  tags: create-site

- name: "Run container Apache"
  hosts: "client1"
  tasks:
    - name: "Run container"
      shell: sudo docker run -d -p 8080:80 -v "$(pwd)"/index.html:/var/www/html:ro --name apache httpd
  tags: run-container
...
